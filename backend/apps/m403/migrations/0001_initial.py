# Generated by Django 4.2.2 on 2025-04-19 07:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AgeClass",
            fields=[
                ("age_class_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(max_length=50, verbose_name="Age Class Name"),
                ),
                (
                    "minimum_age",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Minimum Age"
                    ),
                ),
                (
                    "maximum_age",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Maximum Age"
                    ),
                ),
                ("sex", models.CharField(max_length=10, verbose_name="Sex")),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Athlete",
            fields=[
                ("athlete_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "first_name",
                    models.CharField(max_length=100, verbose_name="First Name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=100, verbose_name="Last Name"),
                ),
                ("date_of_birth", models.DateField(verbose_name="Date of Birth")),
                (
                    "personal_code",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        unique=True,
                        verbose_name="Personal Code",
                    ),
                ),
                ("sex", models.CharField(max_length=10, verbose_name="Sex")),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Collective",
            fields=[
                ("collective_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Collective Name"),
                ),
                (
                    "abbreviation",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Abbreviation"
                    ),
                ),
                (
                    "additional_information",
                    models.TextField(
                        blank=True, null=True, verbose_name="Additional Information"
                    ),
                ),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Competition",
            fields=[
                ("competition_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Competition Name"),
                ),
                ("start_time", models.DateTimeField(verbose_name="Start Time")),
                ("end_time", models.DateTimeField(verbose_name="End Time")),
                ("active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "comments",
                    models.TextField(blank=True, null=True, verbose_name="Comments"),
                ),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CompetitionAthlete",
            fields=[
                (
                    "competition_athlete_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "BIB_number",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="BIB Number"
                    ),
                ),
                (
                    "team_name",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Team Name"
                    ),
                ),
                (
                    "upper_competition_athlete_id",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Upper Competition Athlete ID",
                    ),
                ),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
                (
                    "athlete",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.athlete",
                        verbose_name="Athlete",
                    ),
                ),
                (
                    "collective",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.collective",
                        verbose_name="Collective",
                    ),
                ),
                (
                    "competition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.competition",
                        verbose_name="Competition",
                    ),
                ),
            ],
            options={
                "unique_together": {("athlete", "competition")},
            },
        ),
        migrations.CreateModel(
            name="CompetitionEvent",
            fields=[
                (
                    "competition_event_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "number_of_attempts",
                    models.IntegerField(default=1, verbose_name="Number of Attempts"),
                ),
                (
                    "regrouping",
                    models.BooleanField(
                        default=False, verbose_name="Regrouping After Attempts"
                    ),
                ),
                (
                    "regrouping_done",
                    models.BooleanField(default=False, verbose_name="Regrouping Done?"),
                ),
                (
                    "finalists_attempt_count",
                    models.IntegerField(
                        default=3, verbose_name="Attempts for Finalists"
                    ),
                ),
                ("start_time", models.DateTimeField(verbose_name="Start Time")),
                (
                    "end_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="End Time"
                    ),
                ),
                (
                    "wind_measurement",
                    models.BooleanField(default=False, verbose_name="Wind Measurement"),
                ),
                (
                    "printout",
                    models.BinaryField(blank=True, null=True, verbose_name="Printout"),
                ),
                (
                    "number_of_rounds",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Number of Rounds"
                    ),
                ),
                (
                    "athlete_max_count",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Athlete Max Count"
                    ),
                ),
                (
                    "comments",
                    models.TextField(blank=True, null=True, verbose_name="Comments"),
                ),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
                (
                    "age_class",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.ageclass",
                        verbose_name="Age Class",
                    ),
                ),
                (
                    "competition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.competition",
                        verbose_name="Competition",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CompetitionEventCompetitionAthlete",
            fields=[
                (
                    "competition_event_competition_athlete_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
                (
                    "competition_athlete",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.competitionathlete",
                        verbose_name="Competition Athlete",
                    ),
                ),
                (
                    "competition_event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.competitionevent",
                        verbose_name="Competition Event",
                    ),
                ),
            ],
            options={
                "unique_together": {("competition_event", "competition_athlete")},
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                ("country_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "abbreviation",
                    models.CharField(
                        max_length=10, unique=True, verbose_name="Abbreviation"
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Country Name")),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventType",
            fields=[
                ("event_type_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Event Type Name"),
                ),
                (
                    "upper_event_type_id",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Upper Event Type ID"
                    ),
                ),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                ("person_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "first_name",
                    models.CharField(max_length=100, verbose_name="First Name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=100, verbose_name="Last Name"),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="Phone Number",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="Email"
                    ),
                ),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PersonRole",
            fields=[
                ("person_role_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Person Role Name"),
                ),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Stadium",
            fields=[
                ("stadium_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100, verbose_name="Stadium Name")),
                ("location", models.CharField(max_length=200, verbose_name="Location")),
                (
                    "number_of_lanes",
                    models.IntegerField(verbose_name="Number of Lanes"),
                ),
                (
                    "comments",
                    models.TextField(blank=True, null=True, verbose_name="Comments"),
                ),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="User Role Name"),
                ),
                (
                    "upper_user_role_id",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Upper User Role ID"
                    ),
                ),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserUserRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "user_role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.userrole",
                        verbose_name="User Role",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserPerson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.person",
                        verbose_name="Person",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Round",
            fields=[
                ("round_id", models.AutoField(primary_key=True, serialize=False)),
                ("round_number", models.IntegerField(verbose_name="Round Number")),
                ("start_time", models.DateTimeField(verbose_name="Start Time")),
                (
                    "end_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="End Time"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Round Name"
                    ),
                ),
                (
                    "printout",
                    models.BinaryField(blank=True, null=True, verbose_name="Printout"),
                ),
                (
                    "upper_round_id",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Upper Round ID"
                    ),
                ),
                (
                    "number_of_sub_rounds",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Number of Sub-Rounds"
                    ),
                ),
                (
                    "number_of_max_athletes",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Number of Max Athletes"
                    ),
                ),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
                (
                    "competition_event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rounds",
                        to="m403.competitionevent",
                        verbose_name="Competition Event",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Relation",
            fields=[
                ("relation_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "comments",
                    models.TextField(blank=True, null=True, verbose_name="Comments"),
                ),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
                (
                    "collective",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="m403.collective",
                        verbose_name="Collective",
                    ),
                ),
                (
                    "competition",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="m403.competition",
                        verbose_name="Competition",
                    ),
                ),
                (
                    "competition_event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="m403.competitionevent",
                        verbose_name="Competition Event",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.person",
                        verbose_name="Person",
                    ),
                ),
                (
                    "person_role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.personrole",
                        verbose_name="Person Role",
                    ),
                ),
                (
                    "stadium",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="m403.stadium",
                        verbose_name="Stadium",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="JumpHeight",
            fields=[
                ("jump_height_id", models.AutoField(primary_key=True, serialize=False)),
                ("height", models.DecimalField(decimal_places=2, max_digits=4)),
                ("order", models.PositiveIntegerField()),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
                (
                    "round",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="heights",
                        to="m403.round",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                ("event_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100, verbose_name="Event Name")),
                (
                    "comb_event_var_a",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Combination Variable A",
                    ),
                ),
                (
                    "comb_event_var_b",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Combination Variable B",
                    ),
                ),
                (
                    "comb_event_var_c",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Combination Variable C",
                    ),
                ),
                (
                    "upper_event_id",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Upper Event ID"
                    ),
                ),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
                (
                    "event_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.eventtype",
                        verbose_name="Event Type",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CompetitionOnStadium",
            fields=[
                (
                    "competition_on_stadium_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
                (
                    "competition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.competition",
                        verbose_name="Competition",
                    ),
                ),
                (
                    "stadium",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.stadium",
                        verbose_name="Stadium",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="competitionevent",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="m403.event",
                verbose_name="Event",
            ),
        ),
        migrations.CreateModel(
            name="CollectiveCountry",
            fields=[
                (
                    "collective_country_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
                (
                    "collective",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.collective",
                        verbose_name="Collective",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.country",
                        verbose_name="Country",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AthleteCollective",
            fields=[
                (
                    "athlete_collective_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
                (
                    "athlete",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.athlete",
                        verbose_name="Athlete",
                    ),
                ),
                (
                    "collective",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.collective",
                        verbose_name="Collective",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AthleteCitizenship",
            fields=[
                (
                    "athlete_nationality_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
                (
                    "athlete",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.athlete",
                        verbose_name="Athlete",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.country",
                        verbose_name="Country",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Result",
            fields=[
                ("result_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "result_as_number",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="Result as Number",
                    ),
                ),
                (
                    "lane_or_order_number",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Lane or Order Number"
                    ),
                ),
                (
                    "wind_as_number",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Wind as Number",
                    ),
                ),
                (
                    "attempt_nr",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Attempt Number"
                    ),
                ),
                (
                    "starting_height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=4,
                        null=True,
                        verbose_name="Starting Height",
                    ),
                ),
                (
                    "points_from_result",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Points from Result"
                    ),
                ),
                (
                    "result_as_char",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Result as Character",
                    ),
                ),
                (
                    "created_at_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "valid_until_dt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Valid Until"
                    ),
                ),
                (
                    "competition_event_competition_athlete",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="results",
                        to="m403.competitioneventcompetitionathlete",
                        verbose_name="Competition Event Competition Athlete",
                    ),
                ),
                (
                    "round",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="m403.round",
                        verbose_name="Round",
                    ),
                ),
            ],
            options={
                "unique_together": {
                    ("competition_event_competition_athlete", "round", "attempt_nr")
                },
            },
        ),
    ]
